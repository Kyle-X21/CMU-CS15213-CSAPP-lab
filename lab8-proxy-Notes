# Proxy Lab
### 收获
熟悉了网络编程的基本技术，更深入地理解了套接字的概念、熟悉了相关函数；\
熟悉了并发编程的基本技术，更深入地理解了线程、信号量、线程安全等概念；\
进一步增强系统级实际编程能力，训练了链表、字符串处理等编程能力。
### 未解之谜
做part2的时候不小心对同一个已连接描述符调用了两次close，这时part1就只能过一个测试用例，而part2却可以得满分，改成只调用一次close，两个part就都可以得满分了。
### 总结
这个实验需要我们编写一个并发的带缓存的Web代理服务器，可以接受用户的HTTP 1.0请求，把它们传递给终端服务器，然后向用户发送应答。代理服务器缓存由终端服务器返回的对象，并在把请求发送给终端服务器之前尝试满足客户的请求。
### 实验前置知识
Web代理服务器是一个程序，就像一个在Web浏览器和终端服务器之间的中间人。浏览器不是直接联系终端服务器去得到一个Web页面，而是联系代理服务器，通过它把请求发送给终端服务器。当终端服务器回应代理服务器时，代理服务器会把应答发送给浏览器。\
代理服务器很有用。比如防火墙技术、匿名技术、缓存服务器的对象技术，都需要代理服务器。
### 实验任务
在实验的第一部分，需要建立一个代理服务器，它能接受连接、读并解析请求、把请求传递给web服务器、读服务器的回应、把回应发送给相应的用户。\
第一部分涉及了解基本的HTTP操作，以及如何使用socket来编写通过网络连接来交互的程序。\
在实验的第二部分，需要升级这个代理服务器，来处理多个并发的连接。这需要了解并发技术。\
在实验的第三部分，需要给代理服务器添加缓存功能，来缓存最近获取的web内容。\
提示：
建议使用RIO；
必须忽略SIGPIPE信号，应该优雅地处理返回EPIPE错误的写操作；
### Part 1
现代网络会生成HTTP 1.1请求，我们都当成HTTP 1.0请求处理。\
本实验只需要实现GET操作。\
默认的HTTP端口是80，但是用户可以指定端口。\
监听端口号在启用代理时通过命令行参数指定，这个数必须大于1024，小于65536。\

### Part 2
出现一个未解之谜。\
采用为每个用户创建一个新线程的方法，很简单。

### Part 3
代理需要把它发给用户的对象缓存在存储器里，如果另一个用户需要相同的对象，代理不需要重新连接服务器，它发送被缓存的对象。代理应该设置一个最大的缓存空间大小（实验指定是1MB）和一个最大的可被缓存的对象大小（实验指定是100KB）。\
最简单的方法是为每个活跃的连接分配一个缓冲区，存储代理从服务器收到的数据。\
应该使用近似LRU的驱逐策略。\
确保缓存是线程安全的。同一时刻可以有多个读者，只能有一个写者。\
实现了块的结构，用双向链表把这些块连起来。用数组很明显是不行的，能通过只是因为实验测试的用例不严格。\
ALU有一个巧妙的实现方法，我们把所有访问过的块都插入到链表头部，而需要驱逐块时删除链表尾部的块。这样就不用给每个结点维护一个时间戳。
